version: '3.8'

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./traefik.yml:/traefik.yml:ro"
      - "./acme.json:/letsencrypt/acme.json"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - labelstudio-network
    command:
      - "--configFile=/traefik.yml"

  labelstudio:
    image: heartexlabs/label-studio:latest
    container_name: label-studio
    user: root
    environment:
      LABEL_STUDIO_USERNAME: ${LABEL_STUDIO_ADMIN_USERNAME}
      LABEL_STUDIO_PASSWORD: ${LABEL_STUDIO_ADMIN_PASSWORD}
      LABEL_STUDIO_DISABLE_SIGNUP_WITHOUT_LINK: "true"
      LOCAL_FILES_SERVING_ENABLED: "true"
      LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED: "true"
      LABEL_STUDIO_LOCAL_FILES_DOCUMENT_ROOT: "/data"
      TZ: America/Bogota
      # Configuración para proxy inverso (CRÍTICO para solucionar CSRF)
      LABEL_STUDIO_HOST: ${LABEL_STUDIO_HOST}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
      # Configuración adicional para headers de proxy
      SSRF_PROTECTION_ENABLED: "false"
    volumes:
      - label_studio_data:/label-studio/data
      - ./data:/data
      - ./exports:/exports
      - ./scripts:/scripts
      - ./projects:/projects
      - ./monitoring:/monitoring
      - ./.env:/.env
    command: |
      sh -c "apt-get update && apt-get install -y cron curl bc net-tools procps &&
      pip install python-dotenv requests &&
      echo '0 6,14,22 * * * /scripts/export_annotations.sh' > /tmp/crontab_labelstudio &&
      echo '0 * * * * /scripts/monitor_performance.sh >> /monitoring/cron.log 2>&1' >> /tmp/crontab_labelstudio &&
      crontab /tmp/crontab_labelstudio &&
      service cron start &&
      echo 'Iniciando Label Studio...' &&
      label-studio start &
      echo 'Esperando que Label Studio este listo...' &&
      sleep 30 &&
      echo 'Ejecutando script de creacion de proyectos...' &&
      python3 /scripts/create_project.py || echo 'Script de creacion de proyectos completado' &&
      echo 'Ejecutando script de creacion de usuarios...' &&
      python3 /scripts/create_users.py || echo 'Script de creacion de usuarios completado' &&
      echo 'Ejecutando monitoreo inicial...' &&
      /scripts/monitor_performance.sh &&
      wait"
    restart: unless-stopped
    networks:
      - labelstudio-network
    labels:
      - "traefik.enable=true"
      # Router HTTPS
      - "traefik.http.routers.labelstudio.rule=Host(`labelstudio.lab.utb.edu.co`)"
      - "traefik.http.routers.labelstudio.entrypoints=websecure"
      - "traefik.http.routers.labelstudio.tls=true"
      - "traefik.http.routers.labelstudio.tls.certresolver=myresolver"
      - "traefik.http.routers.labelstudio.middlewares=labelstudio-headers"
      # Router HTTP (para redirección y desafío Let's Encrypt)
      - "traefik.http.routers.labelstudio-http.rule=Host(`labelstudio.lab.utb.edu.co`)"
      - "traefik.http.routers.labelstudio-http.entrypoints=web"
      - "traefik.http.routers.labelstudio-http.middlewares=https-redirect"
      # Middleware de redirección HTTP -> HTTPS
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      # Middlewares para headers (importante para proxy)
      - "traefik.http.middlewares.labelstudio-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.labelstudio-headers.headers.customrequestheaders.X-Forwarded-Host=labelstudio.lab.utb.edu.co"
      # Servicio
      - "traefik.http.services.labelstudio.loadbalancer.server.port=8080"

  backup:
    image: heartexlabs/label-studio:latest
    container_name: label-studio-backup
    user: root
    environment:
      - TZ=America/Bogota
    volumes:
      - label_studio_data:/data
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh
      - ./.env:/.env
    restart: unless-stopped
    networks:
      - labelstudio-network
    command: |
      sh -c "apt-get update && apt-get install -y cron &&
      pip install python-dotenv requests &&
      echo '0 6,14,22 * * * /backup.sh' > /tmp/crontab_backup &&
      crontab /tmp/crontab_backup &&
      service cron start &&
      tail -f /dev/null"

  # Contenedor de monitoreo (no interfiere con Label Studio)
  monitor:
    image: alpine:latest
    container_name: label-studio-monitor
    restart: unless-stopped
    environment:
      - TZ=America/Bogota
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./monitoring:/monitoring
      - ./scripts:/scripts:ro
    networks:
      - labelstudio-network
    command: |
      sh -c "apk add --no-cache docker-cli curl bc tzdata &&
      ln -sf /usr/share/zoneinfo/America/Bogota /etc/localtime &&
      echo 'America/Bogota' > /etc/timezone &&
      echo '0 * * * * /scripts/monitor_docker.sh >> /monitoring/monitor_cron.log 2>&1' > /tmp/crontab_monitor &&
      crond -f -l 2 -L /monitoring/crond.log"

volumes:
  label_studio_data:
    driver: local

networks:
  labelstudio-network:
    driver: bridge